<?php

namespace Mvs\SampleBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Mvs\SampleBundle\Entity\Product;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM.
 * Add your own custom repository methods below.
 */
class ProductRepository extends EntityRepository implements ProductRepositoryInterface
{
    /**
     * @return array
     */
    public function findAllOrderedByName()
    {
        $query = $this->createQueryBuilder('p')
            ->orderBy('p.name', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    /**
     * @param int $id
     * @return Product
     */
    public function findOneById($id)
    {
        return $this->find($id);
    }

    /**
     * @param array $data
     * @return Product
     */
    public function createOne(array $data)
    {
        $product = $this->fromArray($data);

        $em = $this->getEntityManager();
        $em->persist($product);
        $em->flush();

        return $product;
    }

    /**
     * @return Product
     */
    protected function createNewEntity()
    {
        $entityClass = $this->getClassName();

        return new $entityClass();
    }

    /**
     * @param array $data
     * @return Product
     */
    protected function fromArray(array $data)
    {
        $entity = $this->createNewEntity();

        foreach ($data as $key => $value) {
            $method = 'set' . ucfirst($key);

            if (method_exists($entity, $method)) {
                $entity->$method($value);
            }
        }

        return $entity;
    }
}
